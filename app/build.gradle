plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
    id 'xml-class-guard'
    id 'io.github.goldfish07.reschiper'
}

def mfph = [
        "apk.applicationId": "com.example.uni_applet",
]

android {
    namespace 'com.example.uni_applet'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.uni_applet"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0.1"
        manifestPlaceholders = mfph

        ndk {
            abiFilters 'armeabi-v7a', "arm64-v8a"
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
//        config {
//            storeFile file("../applet.jks")
//            storePassword "applet90."
//            keyAlias "applet"
//            keyPassword "applet90."
//            v1SigningEnabled true
//            v2SigningEnabled true
//        }
    }

    buildTypes {
        debug {
//            signingConfig signingConfigs.config
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
        }
        release {
//            signingConfig signingConfigs.config
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
        }
    }

    aaptOptions {
        additionalParameters '--auto-add-overlay'
        //noCompress 'foo', 'bar'
        ignoreAssetsPattern "!.svn:!.git:.*:!CVS:!thumbs.db:!picasa.ini:!*.scc:*~"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        jniLibs {
            useLegacyPackaging = true
        }
    }
}

dependencies {
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation project(path: ':applet')
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    implementation fileTree(dir: 'libs', include: [
            'android-gif-drawable-1.2.28.aar',
            'breakpad-build-release.aar',
            'debug-server-release.aar',
            'uniapp-v8-release.aar',
            'uniMPSDK-V2-release.aar',
            'AliyunPlayer-5.5.0.0-full.aar',
            'serviceLibrary-release-4.2.aar',
            'audio-mp3aac-release.aar',
            'media-release.aar',
            'oauth-google-release.aar',
            'weex_videoplayer-release.aar',
            'agora-microsoft-release.aar',
            'OpenInstall_v2.6.2.jar',
    ])

    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.facebook.fresco:fresco:2.5.0'
    implementation "com.facebook.fresco:animated-gif:2.5.0"
    implementation 'com.github.bumptech.glide:glide:4.16.0'
    implementation 'com.alibaba:fastjson:1.2.83'
    implementation 'androidx.webkit:webkit:1.3.0'
    implementation 'com.squareup.okhttp3:okhttp:3.12.12'
    implementation 'com.squareup.okio:okio:1.15.0'
    implementation 'com.github.getActivity:XXPermissions:18.3'
    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.5'
    implementation("androidx.room:room-runtime:2.4.3")
    annotationProcessor("androidx.room:room-compiler:2.4.3")
    implementation 'com.jakewharton.timber:timber:5.0.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.0'
    implementation 'io.agora.rtc:full-sdk:4.2.2'
    implementation 'com.airbnb.android:lottie:5.2.0'
    implementation 'com.github.yyued:SVGAPlayer-Android:2.6.1'
    implementation 'com.android.billingclient:billing:6.0.0'
    implementation 'com.google.android.gms:play-services-auth:20.1.0'
    implementation 'com.google.android.gms:play-services-location:21.0.1'
    implementation platform('com.google.firebase:firebase-bom:31.1.0')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-messaging'
    implementation 'com.adjust.sdk:adjust-android:4.33.5'
    implementation 'com.android.installreferrer:installreferrer:2.2'
    implementation 'com.google.android.gms:play-services-ads-identifier:18.0.1'
    implementation 'com.google.android.gms:play-services-appset:16.0.2'
    implementation 'com.tencent:mmkv:1.2.16'

    implementation project(':and_module_uni_plugin')
}

xmlClassGuard {
    findAndConstraintReferencedIds = false
    //用于增量混淆的 mapping 文件
    mappingFile = file("xml-class-mapping.txt")

}


resChiper {
    enableObfuscation = true //by default res obfuscate is enabled
    obfuscationMode = "default" //["dir", "file", "default"]
    obfuscatedBundleName = "reschiper-app.aab" // Obfuscated file name, must end with '.aab'
    //mappingFile = file("path/to/your/mapping.txt").toPath() // Mapping file used for incremental obfuscation
    whiteList = [
            //Whitelist rule (directory name to exclude)
            "res/raw", // raw dir will not be obfuscated
            "res/xml", // xml dir will not be obfuscated

            //Whitelist rule (file name to exclude)
            "res/raw/*", // all files inside raw directory will not be obfuscated
            "res/raw/success_tick.json", // success_tick.json file will not be obfuscated
            "res/xml/*", // all files inside xml directory will not be obfuscated

            // White list rules (resource name to exclude)
            "*.R.raw.*",
            "*.R.xml.*",

            // for google-services
            "*.R.string.google_api_key",
            "*.R.string.google_app_id",
            "*.R.string.default_web_client_id",
            "*.R.string.gcm_defaultSenderId",
            "*.R.string.ga_trackingId",
            "*.R.string.firebase_database_url",
            "*.R.string.google_crash_reporting_api_key",
            "*.R.string.google_storage_bucket",
            "*.R.integer.google_play_services_version",

            //firebase
            "*.R.string.project_id",
            //firebase crashlytics
            "*.R.string.com.google.firebase.crashlytics.mapping_file_id",
            "*.R.bool.com.crashlytics.useFirebaseAppId",
            "*.R.string.com.crashlytics.useFirebaseAppId",
            "*.R.string.google_app_id",
            "*.R.bool.com.crashlytics.CollectDeviceIdentifiers",
            "*.R.string.com.crashlytics.CollectDeviceIdentifiers",
            "*.R.bool.com.crashlytics.CollectUserIdentifiers",
            "*.R.string.com.crashlytics.CollectUserIdentifiers",
            "*.R.string.com.crashlytics.ApiEndpoint",
            "*.R.string.com.crashlytics.android.build_id",
            "*.R.bool.com.crashlytics.RequireBuildId",
            "*.R.string.com.crashlytics.RequireBuildId",
            "*.R.bool.com.crashlytics.CollectCustomLogs",
            "*.R.string.com.crashlytics.CollectCustomLogs",
            "*.R.bool.com.crashlytics.Trace",
            "*.R.string.com.crashlytics.Trace",
            "*.R.string.com.crashlytics.CollectCustomKeys"
    ]
    mergeDuplicateResources = true // allow the merge of duplicate resources
    enableFileFiltering = true
    enableFilterStrings = true
    fileFilterList = [ // file filter rules
                       "META-INF/*",
//                       "*/armeabi-v7a/*",
//                       "*/arm64-v8a/*",
//                       "*/x86/*",
//                       "*/x86_64/*"
    ]
    unusedStringFile = "path/to/your/unused_strings.txt" // strings will be filtered in this file
    localeWhiteList = ["en", "in", "fr"] //keep en,en-xx,in,in-xx,fr,fr-xx and remove others locale.
}